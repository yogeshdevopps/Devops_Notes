Kernal
------------
->Interfaces between hardware and softeware
->is programm which is stored in operating system its like programm a commadnthat keeps on running
->Takes command from shell
->When we rae in shell, we exectute comands and commands are being forearded to kernal and the kernal resposibility to talk with hardware thats inside your computer
->shell and kernal build together in one package called operating system

Shell
-----
--> interface between user and kernal
--> 
echo $0

simply type shell name e.g 
root@yogesh15:/home/yogeshko/jenkins-data/jenkins-ansible/web/conf# sh
# echo $0
sh
#

shell script fromat 
-------------
need to define shell (#!/bin/bash) at the start of script so that os will come to know in which shell code need to be executed.

comment in script is given after # symbol.which 


comment should tell what your script does when your script was written 

-----------------------------------
Commands :
#echo /etc/shells                    ---to get the availble shells in system
#echo $0                             ---to get current shells
#sh                                  ---write shell name to change shell
#exec &>> path of file               ---use in script to move output of all executed command in script to file in mentioned path
#date +"%d-%m-%y-%H:%M:%S            ---to get the date but while using as variable in script use format ---  K="`date +"%d-%m-%y-%H:%M:%S"`"
#read choice                         ---read is used to get the input from user and choice is define as varibale to that given input
#case $choice in                     ---case is use in given syntax so that it can run the command for the given choice by user.
 a)uptime;;
 *)echo " no input given"            --- *) it is used when no input given by user
 esac
#echo $?                             ---It is used to confirm last command executed or not if executed then it will give 0 else 1 for non executed
#for i in 1 2 3                      ---for loop example
do
echo "your number is $i"
sleep 2                              ---it will hold for 2 sec
done
#




---------------Exit Status---------------
0---> ok
1---> minor eroor
2---> serious trouble
3-255---> everything esle


------------find command----------------

#find /home -iname ".txt" -atime -10 -type f                ---which .txt file access in last 10 days ago
#find /home -mtime 3 -mtime -5 -daystart -iname "*.pdf"     ---used to find files edited between 3 to 5 days before & daystart will measure time from start of current day
#find /home/test -newer /home/LKD                               ---It is used to compare files of different directory and gives newer one
#find /home -iname ".txt" -mtime -90 -print                     ---txt files changed less than 90 days ago 
#find /home -iname ".txt" -mtime +90                            ---txt files changed more than 90 days ago
#find /home -iname ".txt" -mtime 90                             ---txt files changed exact 90 days
#find /root/Test -iname "*.txt" -mtime -90 -exec ls -lrth {} \;  ---find command with exec command which will help to find and perform execution
#find /root/Test -iname "*.txt" -mtime -90 -exec mv {} {}new \;   ---To find and rename file with this command


-------------touch command-------------------------

#touch -d "Thu Mar 15 2021 12:05:22" {c..d}                 ---to create file with required date and time.


-------------cut command--------------------------
  
#cut -b 1 tset.txt                                 --- To extract specific bytes use -b
#cut -b 1-3 tset.txt                               --- To extract 1-3 range of bytes using -b
#cut -b 1-3,4-6,8 tset.txt                         --- To extract 1-3 ,4-6 and 8 byets using -b
#cut -b 1- tset.txt                                --- To extract all bytes staring from 1 byte to end of the byte use -b 1-
#cut -b -5 tset.txt                                --- To extart first 5 bytes use -b -5
#cut -c 2,5,7 tset.txt                             --- To extract 2,5,7 characters
#cut -c 1-7 tset.txt                               --- To extract 1-7 range characters
#cut -c 1- tset.txt                                --- To extract 1 character to end of the character use -c 1-
#cut -c -5 tset.txt                                --- To extart first 5 characters use -c -5
#cut -f 1 tset.txt                                 --- To extract fields
#cut -d " " -f 1 tset.txt                          --- -d is used for delimiter so it will consider the 1 field till mentioned space ,comma in " "
#cut -d " " -f 2 tset.txt                          --- to extract 2 field by delimiting string in filed with space 
#cut -d " " -f 3 tset.txt                          --- to extract 3 field 
#cut -d " " -f 3,4 tset.txt                        --- To extract 3 and  field
#cut --complement -d " " -f 1 tset.txt             ---compliment use for filter or exclude specific field (1st in this case)
#cut --complement -d " " -f 2 tset.txt             ---compliment use for filter or exclude specific field (2nd in this case)
#cut -d " " -f 1,2 tset.txt --output-delimiter='%' ---output-delimiter is used for add specific character "ajay%manager"
#cat tset.txt | cut -d " " -f 1 | sort -r                --- it will sort 1st field of name with reverse.
#cat tset.txt | cut -d " " -f 1 | sort -r >> tset1.txt   ---it will move the output in txt file
#cat tset.txt | cut -d " " -f 1 | sort -r >> tset1.txt
#cat tset.txt | cut -d " " -f 2 | sort -r >> tset1.txt
#cat tset.txt | cut -d " " -f 3 | sort -r > tset1.txt

-------------------
















































